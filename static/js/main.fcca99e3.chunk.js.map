{"version":3,"sources":["store.js","Login.js","Register.js","Main.js","App.js","index.js","SenchaLogoLg.svg"],"names":["setDataToLocalStorage","key","data","localStorage","setItem","JSON","stringify","Error","getDataFromLocalStorage","getItem","parse","error","Ext","window","require","LoginComponent","ReactComponent","__constructor","this","state","email","password","onLogin","bind","event","parent","list","find","user","checkIfUserExistsInLocalStorage","toast","props","setPage","render","React","createElement","Fragment","Container","autoSize","profiles","defaults","width","height","phone","undefined","margin","padding","shadow","layout","type","align","scrollable","style","backgroundColor","FormPanel","bodyPadding","Image","src","SenchaLogo","Component","html","fontSize","textAlign","TextField","allowBlank","required","label","name","placeholder","errorTarget","onChange","e","setState","prevState","newValue","responsiveConfig","desktop","PasswordField","Button","text","ui","handler","letterSpacing","RegisterComponent","onRegister","push","insertAndUpdateListToLocalStorage","constructor","super","store","create","toolHandler","owner","tool","concat","config","ExtGrid","viewport","ref","grid","title","onReady","extReactDidMount","ExtColumn","dataIndex","App","componentDidMount","renderSign","format","value","color","util","Format","number","page","handleSetPage","Login","Register","Main","ExtReactDOM","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.fcca99e3.chunk.js","sourcesContent":["function insertAndUpdateListToLocalStorage(data) {\n    const list = getDataFromLocalStorage('user-list');\n    if (list) {\n        list.push(data);\n        setDataToLocalStorage('user-list', list);\n    } else {\n        setDataToLocalStorage('user-list', [data]);\n    }\n}\n\nfunction checkIfUserExistsInLocalStorage(data) {\n    const list = getDataFromLocalStorage('user-list');\n    if (list) {\n        return list.find(user => user.email === data.email && user.password === data.password);\n    }\n    return null;\n}\n\nfunction setDataToLocalStorage(key, data) {\n    if (typeof data === 'object') {\n        localStorage.setItem(key, JSON.stringify(data));\n    } else if (typeof data === 'string') {\n        localStorage.setItem(key, data);\n    } else {\n        throw new Error('Invalid data type. Only objects and strings are supported.');\n    }\n}\n\nfunction getDataFromLocalStorage(key) {\n    const data = localStorage.getItem(key);\n    if (data) {\n        try {\n            return JSON.parse(data);\n        } catch (error) {\n            return data;\n        }\n    }\n    return null;\n}\n\nexport {\n    setDataToLocalStorage,\n    getDataFromLocalStorage,\n    insertAndUpdateListToLocalStorage,\n    checkIfUserExistsInLocalStorage\n}","import React, { Component as ReactComponent } from 'react';\nimport {\n    Container,\n    Component,\n    Button,\n    FormPanel,\n    Image,\n    TextField,\n    PasswordField\n} from '@sencha/ext-react-modern';\nimport SenchaLogo from \"./SenchaLogoLg.svg\"\n\nimport { checkIfUserExistsInLocalStorage, setDataToLocalStorage } from './store';\n\nconst Ext = window['Ext'];\n\nExt.require('Ext.Toast');\n\nexport default class LoginComponent extends ReactComponent {\n    __constructor() {\n        this.state = {\n            email: '',\n            password: ''\n        }\n\n        this.onLogin = this.onLogin.bind(this)\n    }\n    onLogin(event, parent) {\n        const userAlready = checkIfUserExistsInLocalStorage(parent.state)\n        if (userAlready) {\n            Ext.toast('Login Successfull', 2000)\n            setDataToLocalStorage('isLogin', 'true');\n            setDataToLocalStorage('page', 'dashboard')\n            this.props.setPage(this, 'main')\n        } else {\n            Ext.toast('Login Failed', 2000)\n        }\n    }\n\n    render() {\n\n        return (\n            <>\n                <Container\n                    autoSize={true}\n                    profiles={{\n                        defaults: {\n                            width: 340,\n                            height: 544\n                        },\n                        phone: {\n                            defaults: {\n                                height: undefined,\n                                margin: undefined,\n                                padding: undefined,\n                                shadow: undefined,\n                                width: undefined\n                            }\n                        }\n                    }}\n                    width={340}\n                    height={544}\n                    layout={{\n                        type: 'vbox',\n                        align: 'middle'\n                    }}\n                    scrollable='y'\n                    // setting the background of the container\n                    style={{ backgroundColor: 'var(--base-color)' }}\n                >\n                    <FormPanel\n                        layout={{ type: 'vbox', align: 'middle' }}\n                        bodyPadding={30}\n                        height={514}\n                        width={340}\n                    >\n                        <Image src={SenchaLogo} height={90} width={280} />\n                        <Component html={\"Login Into Your Account\"} style={{ fontSize: 20, textAlign: 'center', margin: 'auto' }} />\n                        <TextField\n                            allowBlank={false}\n                            required={true}\n                            width={280}\n                            label=\"Email Address\"\n                            name=\"email\"\n                            placeholder=\"Email Address\"\n                            errorTarget=\"qtip\"\n                            onChange={(e) => {\n                                this.setState((prevState) => ({\n                                    ...prevState,\n                                    email: e.newValue\n                                }))\n                            }}\n                            style={{\n                                margin: 'auto'\n                            }}\n                            responsiveConfig={{\n                                desktop: { errorTarget: 'side' }\n                            }} />\n\n                        <PasswordField\n                            allowBlank={false}\n                            required={true}\n                            width={280}\n                            label=\"Password\"\n                            name=\"pass\"\n                            placeholder=\"Password\"\n                            errorTarget=\"qtip\"\n                            onChange={(e) => {\n                                this.setState((prevState) => ({\n                                    ...prevState,\n                                    password: e.newValue\n                                }))\n                            }}\n                            style={{\n                                margin: 'auto'\n                            }}\n                            responsiveConfig={{\n                                desktop: { errorTarget: 'side' }\n                            }} />\n                        <Button\n                            text=\"LOG IN\"\n                            autoSize={true}\n                            width={280}\n                            ui=\"action\"\n                            handler={(e) => this.onLogin(e, this)}\n                            style={{\n                                textAlign: \"center\",\n                                letterSpacing: 1.25,\n                                fontSize: 14,\n                                margin: 'auto'\n                            }}\n                        />\n                        <Button\n                            text=\"Register\"\n                            autoSize={true}\n                            width={280}\n                            handler={(e) =>{\n                                this.props.setPage(this, 'register')\n                                setDataToLocalStorage('page', 'register')}}\n                            style={{\n                                textAlign: \"center\",\n                                letterSpacing: 1.25,\n                                fontSize: 14,\n                                margin: 'auto'\n                            }}\n                        />\n                    </FormPanel>\n                </Container>\n\n            </>\n        )\n    }\n}","import React, { Component as ReactComponent } from 'react';\nimport {\n    Container,\n    Component,\n    Button,\n    FormPanel,\n    Image,\n    TextField,\n    PasswordField\n} from '@sencha/ext-react-modern';\nimport SenchaLogo from \"./SenchaLogoLg.svg\"\nimport { insertAndUpdateListToLocalStorage, setDataToLocalStorage } from './store';\n\nconst Ext = window['Ext'];\n\nExt.require('Ext.Toast');\n\nexport default class RegisterComponent extends ReactComponent {\n    __constructor(props) {\n        this.state = {\n            email: '',\n            password: ''\n        }\n\n        this.onRegister = this.onRegister.bind(this)\n    }\n    onRegister(event, parent) {\n        insertAndUpdateListToLocalStorage(parent.state)\n        setDataToLocalStorage('isLogin', 'true');\n        this.props.setPage(this, 'main')\n    }\n\n    render() {\n\n        return (\n            <>\n                <Container\n                    autoSize={true}\n                    profiles={{\n                        defaults: {\n                            width: 340,\n                            height: 544\n                        },\n                        phone: {\n                            defaults: {\n                                height: undefined,\n                                margin: undefined,\n                                padding: undefined,\n                                shadow: undefined,\n                                width: undefined\n                            }\n                        }\n                    }}\n                    width={340}\n                    height={544}\n                    layout={{\n                        type: 'vbox',\n                        align: 'middle'\n                    }}\n                    scrollable='y'\n                    // setting the background of the container\n                    style={{ backgroundColor: 'var(--base-color)' }}\n                >\n                    <FormPanel\n                        layout={{ type: 'vbox', align: 'middle' }}\n                        bodyPadding={30}\n                        height={514}\n                        width={340}\n                    >\n                        <Image src={SenchaLogo} height={90} width={280} />\n                        <Component html={\"Register Account\"} style={{ fontSize: 20, textAlign: 'center', margin: 'auto' }} />\n                        <TextField\n                            allowBlank={false}\n                            required={true}\n                            width={280}\n                            label=\"Email Address\"\n                            name=\"email\"\n                            placeholder=\"Email Address\"\n                            errorTarget=\"qtip\"\n                            onChange={(e) => {\n                                this.setState((prevState) => ({\n                                    ...prevState,\n                                    email: e.newValue\n                                }))\n                            }}\n                            style={{\n                                margin: 'auto'\n                            }}\n                            responsiveConfig={{\n                                desktop: { errorTarget: 'side' }\n                            }} />\n\n                        <PasswordField\n                            allowBlank={false}\n                            required={true}\n                            width={280}\n                            label=\"Password\"\n                            name=\"pass\"\n                            placeholder=\"Password\"\n                            errorTarget=\"qtip\"\n                            onChange={(e) => {\n                                this.setState((prevState) => ({\n                                    ...prevState,\n                                    password: e.newValue\n                                }))\n                            }}\n                            style={{\n                                margin: 'auto'\n                            }}\n                            responsiveConfig={{\n                                desktop: { errorTarget: 'side' }\n                            }} />\n                        <Button\n                            text=\"SUBMIT\"\n                            autoSize={true}\n                            width={280}\n                            ui=\"action\"\n                            handler={(e) => this.onRegister(e, this)}\n                            style={{\n                                textAlign: \"center\",\n                                letterSpacing: 1.25,\n                                fontSize: 14,\n                                margin: 'auto'\n                            }}\n                        />\n                        <Button\n                            text=\"Login\"\n                            autoSize={true}\n                            width={280}\n                            handler={(e) => {\n                                this.props.setPage(this, 'login')\n                                setDataToLocalStorage('page', 'login')\n                            }}\n                            style={{\n                                textAlign: \"center\",\n                                letterSpacing: 1.25,\n                                fontSize: 14,\n                                margin: 'auto'\n                            }}\n                        />\n                    </FormPanel>\n\n                </Container>\n\n            </>\n        )\n    }\n}","import React, { Component as ReactComponent } from 'react';\nimport {\n    Panel,\n    ExtGrid,\n    ExtColumn,\n    Container,\n    Button\n} from '@sencha/ext-react-modern';\nimport { getDataFromLocalStorage } from './store';\n\n\nconst Ext = window['Ext'];\n\nExt.require('Ext.Toast');\n\nexport default class RegisterComponent extends ReactComponent {\n    constructor() {\n        super()\n        var data = getDataFromLocalStorage('user-list');\n        this.store = Ext.create('Ext.data.Store', { data: data })\n        //this.store = {xtype: 'store',data: data}\n    }\n    toolHandler(owner, tool) {\n        Ext.toast(`You clicked ${tool.config.type || 'a custom tool'}.`);\n    }\n    render() {\n        return (\n            <>\n                <Button\n                    text=\"Logout\"\n                    autoSize={true}\n                    width={280}\n                    handler={(e) => {\n                        this.props.setPage(this, 'login')\n                    }}\n                    style={{\n                        textAlign: \"center\",\n                        letterSpacing: 1.25,\n                        fontSize: 14,\n                        margin: 'auto'\n                    }}\n                />\n                <ExtGrid\n                    viewport={true}\n                    ref={grid => this.grid = grid}\n                    title=\"User List\"\n                    store={this.store}\n                    onReady={this.extReactDidMount}\n                >\n                    <ExtColumn text=\"email\" dataIndex=\"email\" width=\"200\"></ExtColumn>\n\n                </ExtGrid>\n            </>\n        )\n    }\n}","import React, { Component } from 'react';\r\nimport Login from './Login';\r\nimport Register from './Register'\r\nimport Main from './Main'\r\nimport { getDataFromLocalStorage, setDataToLocalStorage } from './store';\r\nconst Ext = window['Ext'];\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      page: 'login'\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    setDataToLocalStorage('isLogin', 'false');\r\n    const page = getDataFromLocalStorage('page');\r\n    // this.setState((prevState) => ({\r\n    //   ...prevState,\r\n    //   page: page\r\n    // }))\r\n  }\r\n\r\n  renderSign = (format, value) => (\r\n    <span style={{ color: value > 0 ? 'green' : value < 0 ? 'red' : '' }}>\r\n      {Ext.util.Format.number(value, format)}\r\n    </span>\r\n  )\r\n\r\n  handleSetPage(e, page) {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      page: page\r\n    }))\r\n  }\r\n\r\n  // render() {\r\n  //   return \r\n  // }\r\n\r\n  render() {\r\n    return <>\r\n      {this.state.page === 'login' ? <Login setPage={(e, owner) => this.handleSetPage(e, owner)} /> : this.state.page === 'register' ? <Register setPage={(e, owner) => this.handleSetPage(e, owner)} /> : <Main setPage={(e, owner) => this.handleSetPage(e, owner)} />}\r\n    </>\r\n  }\r\n\r\n}\r\nexport default App;\r\n","//import '@sencha/ext-modern-enterprise';\r\n//import '@sencha/ext-modern-material';\r\nimport React from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport ExtReactDOM from '@sencha/ext-react-modern';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nExtReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/SenchaLogoLg.3d673382.svg\";"],"sourceRoot":""}